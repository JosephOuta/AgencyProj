response = Behaviors)
# boxplot of unethical behaviors across all 3 IVs
dat %>%
ggplot(aes(x = condition, y = Behaviors,  color = Sabotage)) +
geom_boxplot() +
facet_wrap(~Kind)
# boxplot but binned by within-participant variable Sabotage
dat %>%
ggplot(aes(x = Sabotage, y = Behaviors,  color = condition)) +
geom_boxplot() +
facet_wrap(~Kind)
#interaction plot
dat %>%
interaction.ABC.plot(x.factor = condition, groups.factor = Sabotage, trace.factor = Kind,
response = Behaviors)
std <- function(x) sd(x)/sqrt(length(x))
dodge <- position_dodge(width = 0.9)
dd2 <- dat %>%
group_by(condition, Kind, Sabotage) %>%
summarize(Mean = mean(Behaviors),
SE = std(Behaviors))
# barplot of mean unethical behaviors across condition, kind and sabotage
dd2 %>%
ggplot(aes(x = interaction(Kind, condition), y = Mean, fill=Sabotage)) +
geom_bar(position=position_dodge(), stat = "identity") +
geom_errorbar(aes(ymax = Mean + SE, ymin = Mean - SE), position = dodge, width = 0.2) +
annotate("text", x = 1:4, y = - 0.05,
label = rep(c("Actual", "Deserve"), 2)) +
annotate("text", c(1.5, 3.5), y = -0.2 , label = c("Agency", "Compliance"))  +
theme(plot.margin = unit(c(1, 1, 4, 1), "lines"),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
text=element_text(size=12,  family="sans")
)
# point-plot of summary statistics
dd2 %>%
ggplot(aes(x = condition, y = Mean, group = Sabotage, color = Sabotage)) +
geom_point() +
stat_summary(fun.y = mean, geom = "line") +
facet_wrap(~Kind) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE),
width=0.2,
position = position_dodge(0.01))
# boxplot of unethical behaviors across all 3 IVs
dat %>%
ggplot(aes(x = condition, y = Behaviors,  color = Sabotage)) +
geom_boxplot() +
facet_wrap(~Kind)
# boxplot but binned by within-participant variable Sabotage
dat %>%
ggplot(aes(x = Sabotage, y = Behaviors,  color = condition)) +
geom_boxplot() +
facet_wrap(~Kind)
#interaction plot
dat %>%
interaction.ABC.plot(x.factor = condition, groups.factor = Sabotage, trace.factor = Kind,
response = Behaviors)
# point-plot with error-bars
dd2 %>%
ggplot(aes(x = condition, y = Mean, group = Sabotage, color = Sabotage)) +
geom_point() +
stat_summary(fun.y = mean, geom = "line") +
facet_wrap(~Kind) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE),
width=0.2,
position = position_dodge(0.01))
std <- function(x) sd(x)/sqrt(length(x))
dodge <- position_dodge(width = 0.9)
dd2 <- dat %>%
group_by(condition, Kind, Sabotage) %>%
summarize(Mean = mean(Behaviors),
SE = std(Behaviors))
# barplot of mean unethical behaviors across condition, kind and sabotage
dd2 %>%
ggplot(aes(x = interaction(Kind, condition), y = Mean, fill=Sabotage)) +
geom_bar(position=position_dodge(), stat = "identity") +
geom_errorbar(aes(ymax = Mean + SE, ymin = Mean - SE), position = dodge, width = 0.2) +
annotate("text", x = 1:4, y = - 0.05,
label = rep(c("Actual", "Deserve"), 2)) +
annotate("text", c(1.5, 3.5), y = -0.2 , label = c("Agency", "Compliance"))  +
theme(plot.margin = unit(c(1, 1, 4, 1), "lines"),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
text=element_text(size=12,  family="sans")
)
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(tidyverse) # for data munging
library(knitr)
library(rstatix)
library(ggpubr)
library(lme4)
library(lmerTest)
library(MASS) #for regression. #masks select from rstatix and dplyr...so specify using dplyr::select
library(hablar) #you need this for batch-converting to numeric
library(dae)
library(ordinal) #for clmm regression
d <- read_csv("agendata.csv")
d <- rename(d, AttnCheck = "Debrief+attend")
filter(d, AttnCheck == 1 | AttnCheck == 2 | AttnCheck == 3 | AttnCheck == 4) #check who failed attn end check = 6
# boxplot of unethical behaviors across all 3 IVs
dat %>%
ggplot(aes(x = condition, y = Behaviors,  color = Sabotage)) +
geom_boxplot() +
facet_wrap(~Kind)
# boxplot but binned by within-participant variable Sabotage
dat %>%
ggplot(aes(x = Sabotage, y = Behaviors,  color = condition)) +
geom_boxplot() +
facet_wrap(~Kind)
#interaction plot
dat %>%
interaction.ABC.plot(x.factor = condition, groups.factor = Sabotage, trace.factor = Kind,
response = Behaviors)
# point-plot with error-bars
dd2 %>%
ggplot(aes(x = condition, y = Mean, group = Sabotage, color = Sabotage)) +
geom_point() +
stat_summary(fun.y = mean, geom = "line") +
facet_wrap(~Kind) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE),
width=0.2,
position = position_dodge(0.01))
std <- function(x) sd(x)/sqrt(length(x))
dodge <- position_dodge(width = 0.9)
dd2 <- dat %>%
group_by(condition, Kind, Sabotage) %>%
summarize(Mean = mean(Behaviors),
SE = std(Behaviors))
# barplot of mean unethical behaviors across condition, kind and sabotage
dd2 %>%
ggplot(aes(x = interaction(Kind, condition), y = Mean, fill=Sabotage)) +
geom_bar(position=position_dodge(), stat = "identity") +
geom_errorbar(aes(ymax = Mean + SE, ymin = Mean - SE), position = dodge, width = 0.2) +
annotate("text", x = 1:4, y = - 0.05,
label = rep(c("Actual", "Deserve"), 2)) +
annotate("text", c(1.5, 3.5), y = -0.2 , label = c("Agency", "Compliance"))  +
theme(plot.margin = unit(c(1, 1, 4, 1), "lines"),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
text=element_text(size=12,  family="sans")
)
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(tidyverse) # for data munging
library(knitr)
library(rstatix)
library(ggpubr)
library(lme4)
library(lmerTest)
library(MASS) #for regression. #masks select from rstatix and dplyr...so specify using dplyr::select
library(hablar) #you need this for batch-converting to numeric
library(dae)
library(ordinal) #for clmm regression
d <- read_csv("agendata.csv")
d <- rename(d, AttnCheck = "Debrief+attend")
filter(d, AttnCheck == 1 | AttnCheck == 2 | AttnCheck == 3 | AttnCheck == 4) #check who failed attn end check = 6
d <- d %>%
dplyr::slice(3:length(d$ResponseId)) %>% #remove first 2 rows with title info
filter(Status==0) %>% #Remove Survey Preview rows
arrange(Agency2) %>% #Arrange data by condition
rename(ECNA = "Q51") %>%
filter(AttnCheck==5) %>% #Exclude participants who failed attention end-check
filter(!is.na(Agency2)|!is.na(NonA2)) %>%  #Exclude participants who left attention manipulation check blank
convert(num(Sab1_1,Sab1_2, Sab1_3, Sab1_4,Sab1_5,
Sab1b_1,Sab1b_2,Sab1b_3,Sab1b_4,Sab1b_5,
Sab2_1,Sab2_2,Sab2_3,Sab2_4,Sab2_5,
Sab2b_1,Sab2b_2,Sab2b_3,Sab2b_4,Sab2b_5,
Sab3_1,Sab3_2,Sab3_3,Sab3_4,Sab3_5,
Sab3b_1,Sab3b_2,Sab3b_3,Sab3b_4,Sab3b_5,
EC,
Sab1NA_1,Sab1NA_2,Sab1NA_3,Sab1NA_4,Sab1NA_5,
Sab1NAb_1,Sab1NAb_2,Sab1NAb_3,Sab1NAb_4,Sab1NAb_5,
Sab2NA_1,Sab2NA_2,Sab2NA_3,Sab2NA_4,Sab2NA_5,
Sab2NAb_1,Sab2NAb_2,Sab2NAb_3,Sab2NAb_4,Sab2NAb_5,
Sab3NA_1,Sab3NA_2,Sab3NA_3,Sab3NA_4,Sab3NA_5,
Sab3NAb_1,Sab3NAb_2,Sab3NAb_3,Sab3NAb_4,Sab3NAb_5,
ECNA,AttnCheck)) %>%
mutate(condition = ifelse(is.na(Agency2),2,1)) %>% #create condition column first
rowwise() %>%
mutate(deserve.sab1 = ifelse(condition == 1,
sum(Sab1_1, Sab1_2, Sab1_3, Sab1_4, Sab1_5, na.rm = TRUE),
sum(Sab1NA_1, Sab1NA_2, Sab1NA_3, Sab1NA_4, Sab1NA_5, na.rm = TRUE))) %>%
mutate(deserve.sab2 = ifelse(condition == 1,
sum(Sab2_1, Sab2_2, Sab2_3, Sab2_4, Sab2_5, na.rm = TRUE),
sum(Sab2NA_1, Sab2NA_2, Sab2NA_3, Sab2NA_4, Sab2NA_5, na.rm = TRUE))) %>%
mutate(deserve.sab3 = ifelse(condition == 1,
sum(Sab3_1, Sab3_2, Sab3_3, Sab3_4, Sab3_5, na.rm = TRUE),
sum(Sab3NA_1, Sab3NA_2, Sab3NA_3, Sab3NA_4, Sab3NA_5, na.rm = TRUE))) %>%
mutate(actual.sab1 = ifelse(condition == 1,
sum(Sab1b_1, Sab1b_2, Sab1b_3, Sab1b_4, Sab1b_5, na.rm = TRUE),
sum(Sab1NAb_1, Sab1NAb_2, Sab1NAb_3, Sab1NAb_4, Sab1NAb_5, na.rm = TRUE))) %>%
mutate(actual.sab2 = ifelse(condition == 1,
sum(Sab2b_1, Sab2b_2, Sab2b_3, Sab2b_4, Sab2b_5, na.rm = TRUE),
sum(Sab2NAb_1, Sab2NAb_2, Sab2NAb_3, Sab2NAb_4, Sab2NAb_5, na.rm = TRUE))) %>%
mutate(actual.sab3 = ifelse(condition == 1,
sum(Sab3b_1, Sab3b_2, Sab3b_3, Sab3b_4, Sab3b_5, na.rm = TRUE),
sum(Sab3NAb_1, Sab3NAb_2, Sab3NAb_3, Sab3NAb_4, Sab3NAb_5, na.rm = TRUE))) %>%
dplyr::select(ResponseId, Agency2, NonA2, condition,
deserve.sab1, deserve.sab2, deserve.sab3,
actual.sab1, actual.sab2, actual.sab3)  #select condition and sum columns
d <- d %>%
filter( # Exclusion 2: exclude failed condition 1 Attention Check
!grepl("5", Agency2),
# CODER 1 - JOSEPH OUTA
!grepl("Balancing the Company's Needs and Employee Satisfaction", Agency2), #page 1
!grepl("Based on the company values or mission statement", Agency2),
!grepl("By the value", Agency2),
!grepl("Company decisions should be based on values", Agency2),
!grepl("Decisions will be all over the place and inconsistent.", Agency2),
!grepl("Employees should make decisions based on values.", Agency2), #page 2 of preview
!grepl("Employees should keep the big picture in mind. Not ever customer will be the same and they must respect them and handle them in a friendly manner.", Agency2), # page 3
!grepl("Focus on customer care and well-being", Agency2), # page 4
!grepl("It treats the costumer with professionalism", Agency2),
!grepl("Quality and respect", Agency2), #page 5
!grepl("quickly and confidently", Agency2),
!grepl("should make them respectfully and fairly", Agency2), #page 7
!grepl("That they should do them with the best interests of the company in mind", Agency2),
!grepl("They respect there policy", Agency2), #page 8
!grepl("They should make decisions that the company would approve of and they themselves would approve of.", Agency2),
!grepl("They should think about your value as a pets", Agency2), #page 9
!grepl("They should try to be more friendly towards customers.", Agency2),
!grepl("to serve the customer best", Agency2), #page 10
!grepl("Treat customers in professional and friendly manner", Agency2),
!grepl("treat employees well", Agency2),
!grepl("Treat the customers well.", Agency2),
!grepl("yes", Agency2), #page 11
# CODER 2 - YUEL LI ADDITIONAL EXCLUSIONS
!grepl("Allows customers to make company decisions", Agency2),
!grepl("By working together", Agency2),
!grepl("Employees of SerVest should be mindful of the different value's their customers might have.", Agency2),
!grepl("Employees should make company decisions based on the values the company at large has, not their own.", Agency2),
!grepl("Employees should make company decisions taking into account customer values.", Agency2),
!grepl("Employees should make company decisions with the customer's best interest in mind. All decisions should benefit the customer first.", Agency2),
!grepl("employees should make the best decisions for the customers", Agency2),
!grepl("Employees should work together to make decisions.", Agency2),
!grepl("Following their guidelines", Agency2),
!grepl("How to best serve their interests.", Agency2),
!grepl("I believe that when the company encourages people who do not agree with their beliefs to find another place to be serviced, it gives the employees more power to say who can and cannot shop there.", Agency2),
!grepl("In a professional and caring manner", Agency2),
!grepl("Sarvest trusts its employees to make good decisions", Agency2),
!grepl("Servest relies on employees making good choices.", Agency2),
!grepl("SerVest understands that company values vary and they trust companies to make their own decisions that reflect those.", Agency2),
!grepl("That the company has certain values and also employees should also have those values and their own", Agency2),
!grepl("They respect there policy", Agency2),
!grepl("They should accomidate the customer's values", Agency2),
!grepl("They should make decisions that the company would approve of and they themselves would approve of.", Agency2),
!grepl("They should make decisions with the customers in mind", Agency2),
!grepl("They should put customer service first.", Agency2),
!grepl("They should reflect customer values", Agency2),
!grepl("they take in mind what customers say", Agency2),
!grepl("to reflect customer's beliefs", Agency2),
!grepl("trust employee to make decisions that will reflect positively on the company", Agency2),
!grepl("values reflect the work culture", Agency2),
!grepl("with consideration of the customer needs", Agency2),
!grepl("With morals & sincerity. SerVest trusts the employees", Agency2),
!grepl("with the customer in mind", Agency2),
!grepl("with the upmost integrity", Agency2)
)
d <- d %>%
filter(# CODER 1 - JOSEPH OUTA
!grepl("By keeping a good relationship with the customer- honesty and respect.", NonA2), #page 1
!grepl("Company decisions are basically based in how they treat their cliental.", NonA2),
!grepl("Decisions should be made in a way that will serve the customers better", NonA2),
!grepl("Do not understand the question", NonA2),
!grepl("Employees should share their knowledge with others", NonA2),# page 3
!grepl("employess should be involved with company decisions since everyone has different opinions", NonA2), #page 4
!grepl("Ethical decisions", NonA2),
!grepl("I cannot remember", NonA2),
!grepl("im not aware", NonA2),
!grepl("It denotes professionalism that isn't swayed by the person in charge's own views.", NonA2),
!grepl("It says that Servest understands there are different personal values and trusts that those values will be reflected by you in the company.", NonA2),
!grepl("iT SHOULD BE REAL", NonA2), #page 5
!grepl("make them as a good decision", NonA2),
!grepl("my values might clash with company values", NonA2),
!grepl("Of course, they should think carefully and make a good decision", NonA2), #page 7
!grepl("Of course, they should think carefully and make a good decision.", NonA2),
!grepl("ok", NonA2),
!grepl("SerVest does not discriminate.", NonA2), #page 8
!grepl("should keep customer in mind", NonA2),
!grepl("Should not use company's beliefs as part of personality", NonA2),
!grepl("They are respectful and pay close attention to detail", NonA2), #page 9
!grepl("they say you put the emotions of the customer into consideration", NonA2),
!grepl("They should think about the customer more than themselves.", NonA2),#page 10
!grepl("to the best", NonA2), #page 11
!grepl("Trust themselves to not let their values be swayed", NonA2),
!grepl("Value your privacy and your opinions.", NonA2),
!grepl("varies", NonA2),
!grepl("Vary depending on customer values", NonA2), #page 12
!grepl("with responsibility", NonA2),
!grepl("You should decide what to do", NonA2),
# CODER 2 - YUE LI ADDITIONAL EXCLUSIONS
!grepl("Employees Should be able to make their own decisions", NonA2),
!grepl("information technogy company", NonA2),
!grepl("It's Information Technogy", NonA2),
!grepl("Like many companies, SerVest is committed to making sure customers are treated in a professional, friendly, and patient manner.", NonA2),
!grepl("my values might conflict with the company's", NonA2)
)
# histogram of one of the factors
d %>%
ggplot(aes(x = actual.sab1)) +
geom_bar(width = 0.75) +
scale_x_continuous(breaks = seq (from = 0, to = 5, by = 1))
dat <- d %>%
dplyr::select(ResponseId, condition,
deserve.sab1, deserve.sab2, deserve.sab3,
actual.sab1, actual.sab2, actual.sab3) %>%
pivot_longer(-c("ResponseId", "condition"), names_to = "Key", values_to = "Behaviors") %>% #pivot long then separate
separate(Key, c("Kind", "Sabotage")) %>% # splits Key into kind and sabotage
mutate_at(vars(condition), factor) %>%
mutate_at(vars(Kind), factor) %>%
mutate_at(vars(Sabotage), factor)
# boxplot of unethical behaviors across all 3 IVs
dat %>%
filter(Kind == "actual") %>%
ggplot(aes(x = condition, y = Behaviors,  color = Sabotage)) +
geom_boxplot() #looks left skewed, makes sense since DV is Likert-type/ ordinal
# boxplot but binned by within-participant variable Sabotage
dat %>%
filter(Kind == "actual") %>%
ggplot(aes(x = Sabotage, y = Behaviors,  color = condition)) +
geom_boxplot()
#interaction plot
dat %>%
filter(Kind == "actual") %>%
with(interaction.plot(x.factor = condition, trace.factor = Sabotage,
response = Behaviors))
std <- function(x) sd(x)/sqrt(length(x))
dodge <- position_dodge(width = 0.9)
dd <- dat %>%
group_by(condition, Kind, Sabotage) %>%
summarize(Mean = mean(Behaviors),
SE = std(Behaviors))
# barplot of mean actual behaviors across condition
dd %>%
filter(Kind == "actual") %>%
ggplot(aes(x=condition, y=Mean, fill=Sabotage)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymax = Mean + SE, ymin = Mean - SE),  position = dodge, width = 0.2)
# point-plot of summary statistics
dd %>%
filter(Kind == "actual") %>%
ggplot(aes(x = condition, y = Mean, group = Sabotage, color = Sabotage)) +
geom_point() + geom_line() #stat_summary(geom = "line")
# point plot but binned by within-participant variable Sabotage
dd %>%
filter(Kind == "actual") %>%
ggplot(aes(x = Sabotage, y = Mean, group = condition, col = condition)) +
geom_point() + geom_line()
# Outlier check
dat %>%
filter(Kind == "actual") %>%
group_by(condition, Sabotage) %>%
identify_outliers(Behaviors) # Violated. 9 outliers, 2 of them are extreme
# Normality Check 1: Shapiro-Wilk test
dat %>%
filter(Kind == "actual") %>%
group_by(condition, Sabotage) %>% # if Normal, p-values are greater than 0.05
shapiro_test(Behaviors) # Violated. All p-values are very low meaning data is non-normal.
# Normality Check 2: QQ-Plots (for sample sizes > 50)
dat %>%
filter(Kind == "actual") %>%
ggqqplot("Behaviors", ggtheme = theme_bw()) +
facet_grid(condition ~ Sabotage) # Violated. Highly non-normal behavior - should be linear
# Check for Homogeneity of Variance assumption of btn-subject factor (condition), at each within-subject level
dat %>%
filter(Kind == "actual") %>%
group_by(Sabotage) %>%
levene_test(Behaviors ~ condition) # there is HOV since Levene's p-values>0.05. All have similar variance
# Check for Homogeneity of Covariances of between-subject factor (condition)
box_m(dat[, "Behaviors", drop = FALSE], dat$condition) # Box's M test p = 0.09 which is > 0.001 so we have equal covariances
dat2 <- dat %>%
filter(Kind == "actual")
dat2.anova <- anova_test(
data = dat2, dv = Behaviors, wid = ResponseId,
between = condition, within = Sabotage
)
get_anova_table(dat2.anova) # There was a statistically significant main effect of condition F(1, 146) = 0.032, main effect of Sabotage on unethical behaviors F(2, 277) = 7.93, p = 0.0004, and main interaction effect F(2, 277) = 0.015. generalized effect sizes were low
#============ Post-Hoc Tests =============== ##
# Simple Main Effect of Condition at each Sabotage level
## Effect of condition at each sabotage
dat2 %>%
group_by(Sabotage) %>%
anova_test(dv = Behaviors, wid = ResponseId, between = condition) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni") # Considering the Bonferroni adjusted p-value, the simple main effect of condition was significant at sab1 (p = 0.006) but not at sab2 (p = 0.88) and sab3 (p = 0.61).
## Pairwise comparisons between conditions
dat2 %>%
group_by(Sabotage) %>%
pairwise_t_test(Behaviors ~ condition, p.adjust.method = "bonferroni") # Pairwise comparisons show that the mean Behaviors were significantly different in condition 1 vs condition 2 comparison at Sabotage 1(p = 0.00199); but not in condition 1 vs condition 2 at Sab 2 (p = 0.296) and at Sab 3 (p = 0.203).
### Simple Main effects of Sabotage variable
# Effect of Sabotage at each level of condition
dat2 %>%
group_by(condition) %>%
anova_test(dv = Behaviors, wid = ResponseId, within = Sabotage) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni") # There was a statistically significant effect of Sabotage on mean Behaviors for condition 1 (p = 0.008) but not for condition 2 (p = 0.384).
# Pairwise comparisons between condition at each Sabotage levels - Paired t-test is used because we have repeated measures by Sabotage
dat2 %>%
group_by(condition) %>%
pairwise_t_test(
Behaviors ~ Sabotage, paired = TRUE,
p.adjust.method = "bonferroni"
) %>%
dplyr::select(-df, -statistic, -p) ## Using pairwise paired t-test comparisons, it can be seen that for condition 1, the mean Behaviors were statistically significantly different between Sabotage 1 and 2(p = 0.005) but not for the rest of the Sabotage pairs. For condition 2 the means were not significantly different for any of the Sabotage pairs
dat3 <- dat2 %>%
mutate_at(vars(Behaviors), factor)
#1 - Main effect of condition
mod1 <- clmm(Behaviors ~ 1 + (1|ResponseId), data = dat3, link = "logit") #mixed cumulative link model
mod2 <- clmm(Behaviors ~ condition + (1|ResponseId), data = dat3, link = "logit")
anova(mod1, mod2) #main effect of condition p = 0.047
#2 - Main effect of Sabotage
mod3 <- clmm(Behaviors ~ Sabotage + (1|ResponseId), data = dat3, link = "logit")
anova(mod1, mod3) #p = 0.0058
#3 - interaction effect
mod4 <- clmm(Behaviors ~ condition*Sabotage + (1|ResponseId), data = dat3, link = "logit")
anova(mod1, mod4) #p = 0.001
# Linear mixed effects regression
lin <- lmer(Behaviors~condition + Sabotage + condition*Sabotage + (1|ResponseId), data = dat2)
anova(lin) #just to confirm ANOVA results = similar findings
# boxplot of unethical behaviors across all 3 IVs
dat %>%
ggplot(aes(x = condition, y = Behaviors,  color = Sabotage)) +
geom_boxplot() +
facet_wrap(~Kind)
# boxplot but binned by within-participant variable Sabotage
dat %>%
ggplot(aes(x = Sabotage, y = Behaviors,  color = condition)) +
geom_boxplot() +
facet_wrap(~Kind)
#interaction plot
dat %>%
interaction.ABC.plot(x.factor = condition, groups.factor = Sabotage, trace.factor = Kind,
response = Behaviors)
dd2 <- dat %>%
group_by(condition, Kind, Sabotage) %>%
summarize(Mean = mean(Behaviors),
SE = std(Behaviors))
# point-plot with error-bars
dd2 %>%
ggplot(aes(x = condition, y = Mean, group = Sabotage, color = Sabotage)) +
geom_point() +
stat_summary(fun.y = mean, geom = "line") +
facet_wrap(~Kind) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE),
width=0.2,
position = position_dodge(0.01))
std <- function(x) sd(x)/sqrt(length(x))
dodge <- position_dodge(width = 0.9)
# barplot of mean unethical behaviors across condition, kind and sabotage
dd2 %>%
ggplot(aes(x = interaction(Kind, condition), y = Mean, fill=Sabotage)) +
geom_bar(position=position_dodge(), stat = "identity") +
geom_errorbar(aes(ymax = Mean + SE, ymin = Mean - SE), position = dodge, width = 0.2) +
annotate("text", x = 1:4, y = - 0.05,
label = rep(c("Actual", "Deserve"), 2)) +
annotate("text", c(1.5, 3.5), y = -0.2 , label = c("Agency", "Compliance"))  +
theme(plot.margin = unit(c(1, 1, 4, 1), "lines"),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
text=element_text(size=12,  family="sans")
)
# Outlier check
dat %>%
group_by(condition, Kind, Sabotage) %>%
identify_outliers(Behaviors) # Violated. 9 outliers, two of which are extreme
# Normality Check 1: Shapiro-Wilk test
dat %>%
group_by(condition, Kind, Sabotage) %>% # if Normal, p-values are greater than 0.05
shapiro_test(Behaviors) # Violated. All p-values are very low meaning data is non-normal.
# Normality Check 2: QQ-Plots (for sample sizes > 50)
dat %>%
ggqqplot("Behaviors", ggtheme = theme_bw()) +
facet_grid(condition ~ Sabotage) # Violated. Highly non-normal behavior - should be linear
# Check for Homogeneity of Variance assumption of btn-subject factor (condition), at each within-subject level
dat %>%
group_by(Kind, Sabotage) %>%
levene_test(Behaviors ~ condition) # there is HOV since Levene's p-values>0.05. All groups have similar variance
# Check for Homogeneity of Covariances of between-subject factor (condition)
box_m(dat[, "Behaviors", drop = FALSE], dat$condition) # Box's M test p = 0.09 which is > 0.001 so we have equal covariances
dd2
dd2 %>%
group_by(condition, Kind) %>%
summarize(Mean, SE)
dd2 %>%
group_by(condition) %>%
summarize(Mean, SE)
dd2 %>%
group_by(condition, Kind) %>%
summarize(Mean, SE)
dat %>%
group_by(condition, Kind) %>%
summarize(Mean = mean(Behaviors),
SE = std(Behaviors))
dd2
dat %>%
filter(Kind == "deserve") %>%
group_by(condition, Kind) %>%
summarize(Mean = mean(Behaviors),
SE = std(Behaviors))
dat %>%
filter(Kind == "deserve") %>%
group_by(condition, Sabotage) %>%
summarize(Mean = mean(Behaviors),
SE = std(Behaviors))
dat %>%
filter(Kind == "deserve") %>%
group_by(condition,Sabotage) %>%
summarize(Mean = mean(Behaviors),
SE = std(Behaviors))
dat %>%
group_by(condition, Kind) %>%
summarize(Mean = mean(Behaviors),
SE = std(Behaviors))
